import 'package:flutter/material.dart';import 'package:percent_indicator/percent_indicator.dart';import 'package:quiz/appbar/GradientAppBar.dart';import 'package:quiz/data/QuizList.dart';import 'package:step_progress_indicator/step_progress_indicator.dart';class QuizScreen extends StatefulWidget {  const QuizScreen({Key? key}) : super(key: key);  @override  State<QuizScreen> createState() => _QuizScreenState();}class _QuizScreenState extends State<QuizScreen> {  int currentQuestion = 0;  int trueQuestion = 0;  @override  Widget build(BuildContext context) {    return Container(        decoration: BoxDecoration(          gradient: LinearGradient(            begin: Alignment.topRight,            end: Alignment.bottomLeft,            stops: [0.1, 0.5, 0.7, 0.9],            colors: [              Colors.yellow.shade800,              Colors.yellow.shade700,              Colors.yellow.shade600,              Colors.yellow.shade50,            ],          ),        ),      child: Scaffold(        backgroundColor: Colors.transparent,      appBar: AppBar(        title: Text('My quiz app',style: TextStyle(fontSize: 20.0, color: Colors.white, fontWeight: FontWeight.bold),),        flexibleSpace: Container(          decoration: const BoxDecoration(            gradient: LinearGradient(                begin: Alignment.topCenter,                end: Alignment.bottomCenter,                colors: <Color>[Colors.blueGrey, Colors.orange]),          ),        ),      ),      body: Padding(        padding: const EdgeInsets.all(18.0),        child: questionWidget(getQuestion()[currentQuestion].questionText, getQuestion()[currentQuestion].answerList,),      ),    ));  }  Widget questionWidget(String question, List<Answer> listAnswer) {    return Column(      children: [        SizedBox(height: 12,),        StepProgressIndicator(          totalSteps: getQuestion().length,          currentStep: currentQuestion,          size: 8,          padding: 0,          selectedColor: Colors.yellow,          unselectedColor: Colors.cyan,          roundedEdges: Radius.circular(10),          selectedGradientColor: LinearGradient(            begin: Alignment.topLeft,            end: Alignment.bottomRight,            colors: [Colors.yellowAccent, Colors.deepOrange],          ),          unselectedGradientColor: LinearGradient(            begin: Alignment.topLeft,            end: Alignment.bottomRight,            colors: [Colors.black, Colors.blue],          ),        ),        SizedBox(height: 12,),        Row(          mainAxisAlignment: MainAxisAlignment.end,          children: [            Text('$currentQuestion / ${getQuestion().length}',style: TextStyle(color: Colors.purple,fontSize: 24,fontWeight: FontWeight.w700),)          ],        ),        SizedBox(height: 12,),        Container(          height: 200,          width: double.infinity,          decoration: BoxDecoration(              color: Colors.purple.withOpacity(0.3),              borderRadius: BorderRadius.circular(12),              boxShadow: const [                BoxShadow(                  color: Colors.grey,                  spreadRadius: 1,                  blurRadius: 400,                  offset: Offset(0, 1),                )              ]          ),          child: Column(            mainAxisAlignment: MainAxisAlignment.center,            children: [              Text(                question,                style: TextStyle(fontWeight: FontWeight.w500,                    color: Colors.white,                    fontSize: 54                ),),            ],          ),        ),        SizedBox(height: 12,),        Row(          children: [            Expanded(              child: InkWell(                child: Container(                  decoration: BoxDecoration(                  color: Colors.purple.withOpacity(0.3),                  borderRadius: BorderRadius.circular(12),                  boxShadow: const [                    BoxShadow(                      color: Colors.grey,                      spreadRadius: 1,                      blurRadius: 200,                      offset: Offset(0, 1),                    )                  ]                  ),                  height: 100,                  child: Center(child: Text(listAnswer[0].answerText,style: TextStyle(color: Colors.white,fontSize: 34),),),                ),                onTap: () {                  if(listAnswer[0].isCorrect == true) {                    trueQuestion++;                  }                  nextQuestion();                },              ),            ),            SizedBox(width: 12,),            Expanded(              child:              InkWell(                child: Container(                  decoration: BoxDecoration(                      color: Colors.purple.withOpacity(0.3),                      borderRadius: BorderRadius.circular(12),                      boxShadow: const [                        BoxShadow(                          color: Colors.grey,                          spreadRadius: 1,                          blurRadius: 200,                          offset: Offset(0, 1),                        )                      ]                  ),                  height: 100,                  child: Center(child: Text(listAnswer[1].answerText,style: TextStyle(color: Colors.white,fontSize: 34),),),                ),                onTap: () {                  if(listAnswer[1].isCorrect) {                    trueQuestion++;                  }                  nextQuestion();                },              ),            ),          ],        ),        SizedBox(height: 12,),        Row(          children: [            Expanded(              child: InkWell(                child: Container(                  decoration: BoxDecoration(                      color: Colors.purple.withOpacity(0.3),                      borderRadius: BorderRadius.circular(12),                      boxShadow: const [                        BoxShadow(                          color: Colors.grey,                          spreadRadius: 1,                          blurRadius: 200,                          offset: Offset(0, 1),                        )                      ]                  ),                  height: 100,                  child: Center(child: Text(listAnswer[2].answerText,style: TextStyle(color: Colors.white,fontSize: 34),),),                ),                onTap: () {                  if(listAnswer[2].isCorrect) {                    trueQuestion++;                  }                  nextQuestion();                },              ),            ),            SizedBox(width: 12,),            Expanded(              child:              InkWell(                child: Container(                  decoration: BoxDecoration(                      color: Colors.purple.withOpacity(0.3),                      borderRadius: BorderRadius.circular(12),                      boxShadow: const [                        BoxShadow(                          color: Colors.grey,                          spreadRadius: 1,                          blurRadius: 200,                          offset: Offset(0, 1),                        )                      ]                  ),                  height: 100,                  child: Center(child: Text(listAnswer[3].answerText,style: TextStyle(color: Colors.white,fontSize: 34),),),                ),                onTap: () {                  if(listAnswer[3].isCorrect) {                    trueQuestion++;                  }                  nextQuestion();                },              ),            ),          ],        ),        SizedBox(height: 12,),        InkWell(          child: Container(            decoration: BoxDecoration(                color: Colors.green.withOpacity(0.3),                borderRadius: BorderRadius.circular(12),                boxShadow: const [                  BoxShadow(                    color: Colors.grey,                    spreadRadius: 1,                    blurRadius: 30,                    offset: Offset(0, 1),                  )                ]            ),            height: 60,            child: Center(child: Text('Next question',style: TextStyle(color: Colors.white,fontSize: 22,fontWeight: FontWeight.w400),),),          ),          onTap: () {            nextQuestion();          },        ),      ],    );  }  void nextQuestion() {    if(currentQuestion < getQuestion().length-1) {      setState(() {        currentQuestion ++;      });    } else {      showDialog(context: context, builder: (BuildContext context){        return AlertDialog(          title: Text('Savol qolmadi',style: TextStyle(color: Colors.purple),),          actions: [            Column(              children: [                Text('Savollar soni:  ${getQuestion().length} ta'),                Text('Siz to\'g\'ri topgan savollar soni:  ${trueQuestion} ta'),                new CircularPercentIndicator(                  radius: 60.0,                  circularStrokeCap: CircularStrokeCap.round,                  lineWidth: 12.0,                  percent: (trueQuestion / getQuestion().length <= 1) ?trueQuestion / getQuestion().length : 0,                  center: new Text('$trueQuestion / ${getQuestion().length}',style: TextStyle(color: Colors.purple,fontWeight: FontWeight.w700,fontSize: 24),),                  progressColor: Colors.green,                ),                TextButton(onPressed: (){                  setState(() {                    currentQuestion = 0;                    trueQuestion = 0;                  });                  Navigator.pop(context);                }, child: Text('Cancel'))              ],            )          ],        );      });    }  }}